Import ‘package:flutter/material.dart’; 
Void main() { 
runApp(QuizApp()); 
} 
Class QuizApp extends StatelessWidget { 
@override 
Widget build(BuildContext context) { 
Return MaterialApp( 
Title: ‘Quiz App’, 
Home: QuizPage(), 
); 
} 
} 
Class Question { 
Final String questionText; 
Final List<String> options; 
Final int correctIndex; 
Question(this.questionText, this.options, this.correctIndex); 
} 
Class QuizPage extends StatefulWidget { 
@override 
_QuizPageState createState() => _QuizPageState(); 
} 
Class _QuizPageState extends State<QuizPage> { 
Final List<Question> _questions = [ 
Question(“What is the capital of France?”, [“London”, “Berlin”, “Paris”, “Rome”], 
2), 
Question(“Which planet is known as the Red Planet?”, [“Earth”, “Mars”, “Jupiter”, 
“Saturn”], 1), 
Question(“What is 5 + 3?”, [“5”, “8”, “9”, “6”], 1), 
]; 
Int _currentIndex = 0; 
Int _score = 0; 
Void _answerQuestion(int selectedIndex) { 
If (selectedIndex == _questions[_currentIndex].correctIndex) { 
_score++; 
} 
If (_currentIndex < _questions.length – 1) { 
      setState(() { 
        _currentIndex++; 
      }); 
    } else { 
      Navigator.pushReplacement( 
        Context, 
        MaterialPageRoute( 
          Builder: (context) => ScorePage(score: _score, total: _questions.length), 
        ), 
      ); 
    } 
  } 
 
  @override 
  Widget build(BuildContext context) { 
    Var currentQuestion = _questions[_currentIndex]; 
 
    Return Scaffold( 
      appBar: AppBar(title: Text(‘Quiz App’)), 
      body: Padding( 
        padding: const EdgeInsets.all(20.0), 
        child: Column( 
          crossAxisAlignment: CrossAxisAlignment.start, 
          children: [ 
            Text( 
              ‘Question ${_currentIndex + 1}/${_questions.length}’, 
              Style: TextStyle(fontSize: 22, fontWeight: FontWeight.bold), 
            ), 
            SizedBox(height: 20), 
            Text( 
              currentQuestion.questionText, 
              style: TextStyle(fontSize: 20), 
            ), 
            SizedBox(height: 20), 
            ...currentQuestion.options.asMap().entries.map((entry) { 
              Int idx = entry.key; 
              String text = entry.value; 
              Return ElevatedButton( 
                onPressed: () => _answerQuestion(idx), 
                child: Text(text), 
              ); 
            }), 
          ], 
        ), 
      ), 
    ); 
  } 
} 
 
Class ScorePage extends StatelessWidget { 
  Final int score; 
  Final int total; 
 
  Const ScorePage({required this.score, required this.total}); 
 
  @override 
  Widget build(BuildContext context) { 
    Return Scaffold( 
      appBar: AppBar(title: Text(‘Score Board’)), 
      body: Center( 
        child: Column( 
          mainAxisAlignment: MainAxisAlignment.center, 
          children: [ 
            Text(‘Your Score:’, style: TextStyle(fontSize: 26)), 
            Text(‘$score / $total’, style: TextStyle(fontSize: 40, fontWeight: 
FontWeight.bold)), 
            SizedBox(height: 30), 
            ElevatedButton( 
              onPressed: () { 
                Navigator.pushReplacement( 
                  Context, 
                  MaterialPageRoute(builder: (context) => QuizPage()), 
                ); 
              }, 
              Child: Text(‘Restart Quiz’), 
            ), 
          ], 
        ), 
      ), 
    ); 
  } 
}
